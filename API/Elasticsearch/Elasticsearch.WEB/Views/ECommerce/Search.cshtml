@using Elasticsearch.WEB.ViewModels

@{
    ViewData["Title"] = "Search";
}

@model SearchPageViewModel

<div class="container">
    <div class="row">

        <div class="col-md-3">
            <form asp-action="Search" method="get">
                <div class="mb-3">
                    <label asp-for="SearchViewModel.CustomerFullName" class="form-label"></label>
                    <input asp-for="SearchViewModel.CustomerFullName" class="form-control">
                </div>
                <div class="mb-3">
                    <label asp-for="SearchViewModel.Category" class="form-label"></label>
                    <input asp-for="SearchViewModel.Category" class="form-control">
                </div>
                <div class="mb-3">
                    <label asp-for="SearchViewModel.Gender" class="form-label"></label>
                    <input asp-for="SearchViewModel.Gender" class="form-control"></input>
                </div>
                <div class="mb-3">
                    <label asp-for="SearchViewModel.OrderDateStart" class="form-label"></label>
                    <input asp-for="SearchViewModel.OrderDateStart" class="form-control">
                </div>
                <div class="mb-3">
                    <label asp-for="SearchViewModel.OrderDateEnd" class="form-label"></label>
                    <input asp-for="SearchViewModel.OrderDateEnd" class="form-control">
                </div>
                <div class="mb-3">
                    <button class="btn btn-outline-primary" type="submit">Search</button>
                </div>
            </form>
        </div>

        <div class="col-md-9">

            <div class="alert alert-success">
                <span>Search Results Count: @Model.TotalCount</span>
            </div>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>OrderDate</th>
                        <th>OrderId</th>
                        <th>Customer Name</th>
                        <th>Gender</th>
                        <th>Category</th>
                        <th>Total Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ECommerceList)
                    {
                        <tr>
                            <td>@item.OrderDate</td>
                            <td>@item.OrderId</td>
                            <td>@item.CustomerFullName</td>
                            <td>@item.Gender</td>
                            <td>@item.Category</td>
                            <td>@item.TaxfulTotalPrice</td>
                        </tr>
                    }
                </tbody>
            </table>

            <nav>
                <ul class="pagination">

                    <li class="page-item">
                        <a class="page-link" href="@Model.CreatePageUrl(Context.Request, 1, 10)">@("<<")</a>
                    </li>

                    @for (int i = Model.StartPage(); i <= Model.EndPage(); i++)
                    {
                        <li class="page-item @(Model.Page == i ? "active" : "")">
                            <a class="page-link" href="@Model.CreatePageUrl(Context.Request, i, Model.PageSize)">@i</a>
                        </li>
                    }

                    <li class="page-item">
                        <a class="page-link" href="@Model.CreatePageUrl(Context.Request, Model.PageCount, 10)">@(">>")</a>
                    </li>
                </ul>
            </nav>

        </div>
    </div>
</div>

